generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model Product {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String     @db.VarChar(80)
  description String     @db.VarChar(240)
  ingredients String[]
  moveActive  Boolean    @default(false)
  price       Float
  userId String?
  User   User? @relation(fields: [userId], references:[id])
  categories    Category[]

}

model Category {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  name      String
  products   Product[]
  userId String?
  User   User? @relation(fields: [userId], references:[id])
}



model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime 
  name String
  email String
  password String
  products Product[]
  categories Category[]
  ProductSale ProductSale[]
  

  messages Chat[]
  Chat Chat[]  @relation("RecieverOfChat")
  
  
}


model  Chat {
id String  @id  @default(uuid())
receiverId String
receiver User  @relation("RecieverOfChat", fields: [receiverId], references: [id])
sender User  @relation(fields: [senderId], references: [id])
senderId String
message String
createdAt DateTime  @default(now())
updatedAt DateTime  @updatedAt
}

//model Customer {
//
//}

model ProductSale {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userThatSold User? @relation(fields: [userId], references:[id])
  userId String
  price Float

}

model Move {
  id String @id        @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  
}





